<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.kunli.una.mapper.SysVersionMapper">

    <resultMap type="cn.kunli.una.pojo.sys.SysVersion" id="BaseResultMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
    </resultMap>

    <!--条件查询公共语句-->
    <sql id="baseQuery">
        select record.*
        ,sysDictionary.name as app_type_name
        from sys_version as record

        left join sys_dictionary as sysDictionary on record.app_type_dcode = sysDictionary.code
        <where>
            <include refid="cn.kunli.una.handler.BasicMapper.baseCondition" />
            <if test="record.keyword != null and record.keyword !=''">
                and (CONCAT_WS('|',record.name,sysAccount.name)) like '%${record.keyword}%'
            </if>
            <if test="record.appTypeDcode != null">
                and app_type_dcode = #{record.appTypeDcode}
            </if>

        </where>
        <!--<include refid="cn.kunli.una.mapper.CommonMapper.baseOrder" />-->
        ORDER BY record.version_code DESC
    </sql>

    <!--实体类数据库字段-->
    <sql id="columnName" >
        id
        ,external_version
        ,internal_version
        ,file_id
        ,description
        ,remark
        ,creator_id
        ,create_time
        ,modifier_id
        ,modify_time
        ,delete_flag
    </sql>

    <!--实体类传值语句-->
    <sql id="columnValue" >
        #{record.id}
        ,#{record.externalVersion}
        ,#{record.internalVersion}
        ,#{record.fileId}
        ,#{record.description}
        ,#{record.remark}
        ,#{record.creatorId}
        ,#{record.createTime}
        ,#{record.modifierId}
        ,#{record.modifyTime}
        ,#{record.deleteFlag}
    </sql>










    <!--条件查询（返回实体类）-->
    <select id="selectBySelective" resultType="cn.kunli.una.pojo.sys.SysVersion">
        <include refid="baseQuery" />
    </select>

    <!--条件查询（返回封装类）-->
    <select id="selectResultMapBySelective" resultMap="BaseResultMap">
        <include refid="baseQuery" />
    </select>

    <!--批量插入-->
    <insert id="batchInsert" parameterType="java.util.List">
        insert into sys_version
        (<include refid="columnName" />)values
        <foreach collection="recordList" item="record" separator=",">
            (<include refid="columnValue" />)
        </foreach>
    </insert>

</mapper>
